@model IEnumerable<TVAttendance.Models.Session>

@{
    ViewData["Title"] = "Session Index";
    var currentPage = ViewData["CurrentPage"] as int? ?? 1;
    var pageSize = ViewData["PageSize"] as int? ?? 10;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
}

<h1>Sessions</h1>

<form asp-action="Index" method="get">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />

    <div class="form-horizontal">
        <!-- Filter Button -->
        <button class="btn @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle"
                data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter" title="Click to open or close filter options.">
            Filter/Search @ViewData["numFilters"]
        </button>

        <!-- Create and Export Buttons -->
        <a asp-action="Create" class="btn btn-outline-success" title="Create new Session.">Create</a>
        <input class="btn btn-outline-primary" type="submit" name="fred" value="Export" />

        <!-- Collapsible Filter Form -->
        <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <!-- Date Range -->
                    <div class="form-group col-md-3">
                        <div>
                            <label class="control-label">From Date:</label>
                            <input type="date" name="fromDate" value="@ViewData["fromDate"]" class="form-control" title="Filter from a date." />
                        </div>
                        <div>
                            <label class="control-label">To Date:</label>
                            <input type="date" name="toDate" value="@ViewData["toDate"]" class="form-control" title="Filter to a date." />
                        </div>
                    </div>

                    <!-- Chapter Dropdown -->
                    <div class="form-group col-md-3" title="Filter by chapter location.">
                        <label class="control-label">Select Chapter:</label>
                        @Html.DropDownList("ChapterID", ViewData["ChapterID"] as SelectList, "All Chapters",
                                 new { @class = "form-control" })
                    </div>

                    <!-- Director Dropdown -->
                    <div class="form-group col-md-3" title="Filter by Director">
                        <label class="control-label">Select Director:</label>
                        @Html.DropDownList("DirectorName", ViewData["DirectorName"] as SelectList, "All Directors",
                                 new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group align-self-end">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary" title="Submit current filter options." />
                        <a asp-action="Index" class="btn btn-outline-dark" title="Clear all filter options">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th><input type="submit" name="actionButton" value="Chapter" class="sort-arrow" title="Click to sort by chapter location column" /></th>
                <th class="d-none d-md-table-cell"><input type="submit" name="actionButton" value="Date" class="sort-arrow" title="Click to sort by session date column" /></th>
                <th class="d-none d-lg-table-cell"><input type="submit" value="Attendance Rate" title="Number of attendees column" /></th>
                <th class="d-none d-lg-table-cell"><input type="submit" value="Directors" title="Directors for the specific session" /></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Chapter.City)</td>
                    <td class="d-none d-md-table-cell">@Html.DisplayFor(modelItem => item.DateFormat)</td>
                    <!--Attendance-->
                    <td class="d-none d-lg-table-cell">
                        @{
                            int totalSingers = item.Chapter?.Singers.Count() ?? 0;
                            int attendedSingers = item.SingerSessions.Count();
                            double attendanceRate = (totalSingers > 0)
                            ? Math.Round((double)attendedSingers / totalSingers * 100, 2)
                            : 0;
                        }
                        @($"{attendedSingers}/{totalSingers} Singers - {attendanceRate:F2}%")
                    </td>
                    <!--Directors-->
                    <td class="d-none d-xl-table-cell">
                        @{
                            List<string> directorNames = item.Chapter.Directors.Select(d => d.FirstName + " " + d.LastName).ToList();
                        }
                        @if (directorNames.Any())
                        {
                            @string.Join(", ", directorNames)
                        }
                        else
                        {
                            <span class="text-muted">No directors assigned</span>
                        }
                    </td>
                    <td>
                        <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.ID" title="Click to edit record">Edit</a>
                        <a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@item.ID" title="Click to view record details">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_PagingNavBar" />

</form>
@section Scripts {
    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}