@model IEnumerable<TVAttendance.Models.Shift>

@{
    var thisEvent = ViewBag.Event as TVAttendance.Models.Event;

    <partial name="_EventDetails" model="@thisEvent" />
    ViewData["Title"] = "Index";
    var eventName = thisEvent.EventName;
}

<h2>Shifts for @eventName Event</h2>

<form asp-action="Index" method="get" >
    <input type="hidden" name="EventID" value="@thisEvent.ID" />
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap">
        <div>
            @if (User.IsInRole("Director") || User.IsInRole("Supervisor") || User.IsInRole("Admin"))
            {
                <button class="btn @ViewData["Filtering"] btn-outline-secondary" type="button" data-bs-toggle="collapse" id="filterToggle"
                        data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter" title="Click to open or close filter options.">
                    Filter/Search @ViewData["numFilters"]
                </button>
            }
        </div>

        <div class="d-flex gap-2">
            @if (User.IsInRole("Director") || User.IsInRole("Supervisor") || User.IsInRole("Admin"))
            {
                @if(thisEvent.EventOpen)
                {
                    <a class="btn btn-success" asp-route-id="@thisEvent.ID" asp-action="Create">Create Shift(s)</a>
                }
                <a class="btn btn-outline-primary" asp-controller="EventShift" asp-action="ExportToExcel" asp-route-id="@thisEvent.ID" name="exportShifts" value="Export">Export</a>
            }
        </div>
    </div>
        <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
            <div class="card card-body bg-light">
                <p><strong>Filter by Shift Date Range:</strong></p>
                <div class="row">
                    <div class="col-md-3">
                        <label class="control-label">From Date:</label>
                        <input type="date" name="fromDate" value="@ViewData["fromDate"]" class="form-control" title="Filter from a date." />
                    </div>
                    <div class="col-md-3">
                        <label class="control-label">To Date:</label>
                        <input type="date" name="toDate" value="@ViewData["toDate"]" class="form-control" title="Filter to a date." />
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary me-2" title="Submit current filter options." />
                        <a href="@Url.Action("Index", new { EventID = thisEvent.ID })" class="btn btn-outline-dark" title="Clear all filter options">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <button type="submit" value="Volunteer" class="btn-filter sort-arrow" title="Click to sort by the Shift Starting Time">Shift Start</button>
                </th>
                <th>
                    <button type="submit" name="actionButton" value="ShiftStart" class="btn-filter sort-arrow" title="Click to sort by the Shift Starting Time">Shift Start</button>
                </th>
                <th>
                    <button type="submit" name="actionButton" value="ShiftEnd" class="btn-filter sort-arrow" title="Click to sort by the Shift Ending Time">Shift End</button>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @{

                            var volunteerName = item.ShiftVolunteers
                            .Select(v => v.Volunteer.FullName)
                            .FirstOrDefault();
                        }
                        @if(volunteerName == null){
                            <p>Unassigned</p>
                        }
                        else{
                            @volunteerName
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShiftStart)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShiftEnd)
                    </td>
                    <td>
                        @if (User.IsInRole("Director") || User.IsInRole("Supervisor") || User.IsInRole("Admin"))
                        {
                            <a asp-action="Edit" class="btn btn-outline-primary" asp-route-id="@item.ID">Edit</a>
                            <a asp-action="Delete" class="btn btn-outline-danger" asp-route-id="@item.ID">Delete</a>
                        }
                        @* Add a join here for users *@
                        @if (User.IsInRole("User") && item.ShiftVolunteers.Select(a=>a.VolunteerID).FirstOrDefault() == null){
                            <a asp-action="Take" asp-controller="VolunteerShift" class="btn btn-outline-primary" asp-route-id="@item.ID">Take</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <partial name="_PagingNavBar" />

    @await Html.PartialAsync("_DeleteEventShift")

</form>