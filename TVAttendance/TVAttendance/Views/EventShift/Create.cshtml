@model TVAttendance.Models.Shift

@{
    ViewData["Title"] = "Create Shift";
    var eventRange = ViewData["EventRange"];
    var eventStart = ViewData["EventStart"] as DateTime?;
    var eventEnd = ViewData["EventEnd"] as DateTime?;
}

<h1>New shift for @ViewData["EventName"]</h1>

<hr />
<form id="event-create" asp-action="Create" method="post">
    <div class="row">
        <div class="col-md-6">
            <!--For JavaScript validation-->
            <input type="hidden" id="event-start" value="@eventStart?.ToString("yyyy-MM-dd")" />
            <input type="hidden" id="event-end" value="@eventEnd?.ToString("yyyy-MM-dd")" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="EventID" />

            <div class="form-group">
                <label asp-for="ShiftDate" class="control-label"></label>
                <input id="new-shift-date" type="date" asp-for="ShiftDate" class="form-control"
                value="@eventStart?.ToString("yyyy-MM-dd")"
                min="@eventStart?.ToString("yyyy-MM-dd")"
                max="@eventEnd?.ToString("yyyy-MM-dd")"/>
                <span asp-validation-for="ShiftDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Event Capacity</label>
                <p id="updated-date">@ViewData["ShiftCount"]/@ViewData["EventCap"]</p>
                <span id="cap-valid" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ShiftStart" class="control-label"></label>
                <input id="shift-start" type="time" asp-for="ShiftStart" class="form-control" />
                <span asp-validation-for="ShiftStart" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ShiftEnd" class="control-label"></label>
                <input id="shift-end" type="time" asp-for="ShiftEnd" class="form-control" />
                <span asp-validation-for="ShiftEnd" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input id="btn-create" type="submit" value="Create" class="btn btn-primary" />
                <a class="btn btn-outline-secondary" asp-action="Index" asp-controller="EventShift" asp-route-EventID="@Model.EventID">Back to Event</a>
            </div>
        </div>
    </div>
    <input id="modal-show" type="hidden" value="@ViewData["ModalPopupShift"]" />

    <partial name="_CreateNewEventShift"></partial>
</form>





@section Scripts {
    <script src="~/js/ModalPopupShift.js"></script>
    <script>
        var shiftDate = document.getElementById('new-shift-date')
        var num = document.getElementById('updated-date')
        var capMessage = document.getElementById('cap-valid')
        var createSubmit = document.getElementById('btn-create')

        var numOfShift = parseInt(num.innerText.substring(0, 1))
        var cap = parseInt(num.innerText.substring(2))


        shiftDate.onchange = function () {
            var updatedDate = shiftDate.value

            $.ajax({
                url: '@Url.Action("ShiftDateUpdate", "EventShift")',
                type: 'GET',
                data: {
                    updatedDate: updatedDate,
                    id: @Model.EventID
                },
                success: function (response) {
                    if (response.success) {
                        document.getElementById("updated-date").innerText = response.shiftCount + "/" + response.eventCap

                        CheckCap(response.shiftCount, response.eventCap, capMessage)
                    }
                }
            })

            console.log(numOfShift, cap)
        }

        window.addEventListener('DOMContentLoaded', function () {
            CheckCap(numOfShift, cap, capMessage)
        })

        function CheckCap(numShift, numCap, elementTarget) {
            if (numShift == numCap) {
                elementTarget.innerText = "Max capacity on current date"
                createSubmit.disabled = true
            }
            else {
                elementTarget.innerText = ""
                createSubmit.disabled = false
            }
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
