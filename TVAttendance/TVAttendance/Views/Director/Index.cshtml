@model IEnumerable<TVAttendance.Models.Director>

@{
    ViewData["Title"] = "Director Index";

    // Retrieve the selected chapter and list of chapters from ViewData.
    int? selectedChapter = ViewData["SelectedChapter"] as int?;
    SelectList chapterList = ViewData["ChapterList"] as SelectList;

    var currentPage = ViewData["CurrentPage"] as int? ?? 1;
    var pageSize = ViewData["PageSize"] as int? ?? 10;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
    var showArchived = ViewData["ShowArchived"] as bool? ?? false;
}

<h1>Directors</h1>

<form asp-action="Index" method="get" class="mb-3">
    <div class="form-horizontal mt-3 mb-3">

        <button class="btn @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle"
                data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter" title="Click to open or close filter options.">
            Filter/Search @ViewData["numFilters"]
        </button>
        <div class="collapse" id="collapseFilter">
            <div class="card card-body bg-light border-dark">
                <div class="row">
                    <div class="form-group" title="Filter by a selectable chapter">
                        <label for="chapterId" class="form-label">Filter by Chapter</label>
                        @Html.DropDownList("chapterId", chapterList, "-- All Chapters --", new { @class = "form-control", onchange = "this.form.submit();" })
                    </div>

                    <div class="form-group" title="Filter by director name.">
                        <label class="control-label">Search Full Name:</label>
                        @Html.TextBox("SearchString", null, new { @class = "form-control", @placeholder = "Janet Stone" })
                    </div>
                </div>
                <div class="form-group align-self-end">
                    <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary" title="Submit current filter options." />
                    <a asp-action="Index" class="btn btn-outline-dark" title="Clear all filter options">Clear</a>
                </div>
            </div>


            <!-- Preserve other parameters -->
            <input type="hidden" name="showArchived" value="@ViewData["ShowArchived"]" />
            <input type="hidden" name="page" value="@ViewData["CurrentPage"]" />
            <input type="hidden" name="pageSize" value="@ViewData["PageSize"]" />
        </div>
    </div>



    <div class="form-group mb-3">
        <a href="@Url.Action("Index")" class="btn btn-primary" title="Show only currently active directors.">Show Active</a>
        <a href="@Url.Action("Index", new { showArchived = true })" class="btn btn-secondary" title="Show only archived directors.">Show Archived</a>

    </div>
    @if (User.IsInRole("Supervisor") || User.IsInRole("Admin"))
    {
        <a asp-action="Create" class="btn btn-outline-success" title="Create new Director.">Create</a>
    }
    <table class="table">
        <thead>
            <tr>
                <th title="Name column">
                    @Html.DisplayNameFor(model => model.FullName)
                </th>
                <th class="d-none d-lg-table-cell" title="Email column">
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                    <td class="d-none d-lg-table-cell">@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>
                        @if (item.Status)
                        {
                            <span class="badge bg-success">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Archived</span>
                        }
                    </td>
                    <td>
                        <div class="d-flex gap-2">
                            @if (User.IsInRole("Admin") || User.IsInRole("Supervisor") ||
                           (User.IsInRole("Director") && string.Equals(item.Email, User.Identity?.Name, StringComparison.OrdinalIgnoreCase)))
                            {
                                <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                            }

                            <a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@item.ID">Details</a>
                            @if (User.IsInRole("Supervisor") || User.IsInRole("Admin"))
                            {
                                @if (item.Status)
                                {
                                    <form asp-action="Archive" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@item.ID" />
                                        <button type="submit" class="btn btn-danger">Archive</button>
                                    </form>
                                }
                                else
                                {
                                    <form asp-action="Restore" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@item.ID" />
                                        <button type="submit" class="btn btn-warning">Restore</button>
                                    </form>
                                }
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_PagingNavBar" />
</form>


@section Scripts {
    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}