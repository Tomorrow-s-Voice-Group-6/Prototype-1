@model IEnumerable<TVAttendance.Models.Director>

@{
    ViewData["Title"] = "Director Index";

    // Retrieve the selected chapter and list of chapters from ViewData.
    int? selectedChapter = ViewData["SelectedChapter"] as int?;
    SelectList chapterList = ViewData["ChapterList"] as SelectList;

    var currentPage = ViewData["CurrentPage"] as int? ?? 1;
    var pageSize = ViewData["PageSize"] as int? ?? 10;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
    var showArchived = ViewData["ShowArchived"] as bool? ?? false;
}

<h1>Directors</h1>

<form asp-action="Index" method="get" class="mb-3">
    <div class="row">
        <div class="col-md-4">
            <label for="chapterId" class="form-label">Filter by Chapter</label>
            @Html.DropDownList("chapterId", chapterList, "-- All Chapters --", new { @class = "form-control", onchange = "this.form.submit();" })
        </div>
        <!--Working on filtering by name-->
        @* <div class="col-md-4">
            <label for="SearchString" class="form-label">Search by Name</label>
            <input type="text" name="SearchString" class="form-control" placeholder="Janet Stone">
            <button type="submit" class="btn btn-outline-primary ms-2">Search</button>
        </div> *@
        <!-- Preserve other parameters -->
        <input type="hidden" name="showArchived" value="@ViewData["ShowArchived"]" />
        <input type="hidden" name="page" value="@ViewData["CurrentPage"]" />
        <input type="hidden" name="pageSize" value="@ViewData["PageSize"]" />
    </div>
</form>


<div>
    <a href="@Url.Action("Index")" class="btn btn-primary" title="Show only currently active directors.">Show Active</a>
    <a href="@Url.Action("Index", new { showArchived = true })" class="btn btn-secondary" title="Show only archived directors.">Show Archived</a>

</div>
@if (User.IsInRole("Supervisor") || User.IsInRole("Admin"))
{
    <a asp-action="Create" class="btn btn-outline-success" title="Create new Director.">Create</a>
}
<table class="table">
    <thead>
        <tr>
            <th title="Name column">
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th class="d-none d-lg-table-cell" title="Email column">
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                <td class="d-none d-lg-table-cell">@Html.DisplayFor(modelItem => item.Email)</td>
                <td>
                    @if (item.Status)
                    {
                        <span class="badge bg-success">Active</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Archived</span>
                    }
                </td>
                <td>
                    <div class="d-flex gap-2">
                        @if (User.IsInRole("Admin") || User.IsInRole("Supervisor") ||
                       (User.IsInRole("Director") && string.Equals(item.Email, User.Identity?.Name, StringComparison.OrdinalIgnoreCase)))
                        {
                            <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                        }

                        <a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@item.ID">Details</a>
                        @if (User.IsInRole("Supervisor") || User.IsInRole("Admin"))
                        {
                            @if (item.Status)
                            {
                                <form asp-action="Archive" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@item.ID" />
                                    <button type="submit" class="btn btn-danger">Archive</button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="Restore" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@item.ID" />
                                    <button type="submit" class="btn btn-warning">Restore</button>
                                </form>
                            }
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination and Show Records Per Page -->
<!-- Show Records Per Page -->
<form method="get">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center pagination-sm mt-3">
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="btn page-link" href="?page=1">« First</a>
            </li>
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="btn page-link" href="?page=@(currentPage - 1)">‹ Previous</a>
            </li>
            <li class="page-item active">
                <button type="button" class="btn page-link page-active">Page @currentPage of @totalPages</button>
            </li>
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="btn page-link" href="?page=@(currentPage + 1)">Next ›</a>
            </li>
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="btn page-link" href="?page=@totalPages">Last »</a>
            </li>
        </ul>
    </nav>
</form>
