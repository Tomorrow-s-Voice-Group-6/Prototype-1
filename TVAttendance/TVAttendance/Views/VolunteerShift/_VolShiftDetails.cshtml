@model TVAttendance.Models.ShiftVolunteer

<div class="modal-header">
    <h5 class="modal-title" id="vol-shift-details-modal-label">@Model.Shift.Event.EventName Shift Details</h5>
    <button id="details-close" type="button" class="close" data-bs-dismiss="modal" title="Close Details window" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body">
    <div>
        <dl class="row">
            <div class="col-sm-6">
                 <dt>
                     @Html.DisplayNameFor(model => model.Shift.Event.EventName)
                 </dt>
                 <dd>
                     @Html.DisplayFor(model => model.Shift.Event.EventName)
                 </dd>
                 <dt>
                     @Html.DisplayNameFor(model => model.Shift.ShiftRange)
                 </dt>
                 <dd>
                     @Html.DisplayFor(model => model.Shift.ShiftRange)
                 </dd>
            </div>
        </dl>

        <dl class="row">
            <div class="col-sm-6">
                @if (Model.ClockIn.HasValue)
                {
                    <dt>
                        @Html.DisplayNameFor(model => model.ClockIn)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ClockIn)
                    </dd>
                }
            </div>
            <div class="col-sm-5">
                @if (Model.ClockOut.HasValue)
                {
                    <dt>
                        @Html.DisplayNameFor(model => model.ClockOut)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ClockOut)
                    </dd>
                }
            </div>
        </dl>
                
        <dl>
            <dt>
                @Html.DisplayNameFor(model => model.NonAttendance)
            </dt>
            @if (Model.NonAttendance == null)
            {

                <dd>Unconfirmed</dd>
            }
            else if (Model.NonAttendance == true)
            {
                <dd>Attended</dd>
                
            }
            else
            {
                <dd>Unattended</dd>
                <dt>@Html.DisplayNameFor(model => model.AttendanceReason)</dt>
                <dd>@Html.DisplayFor(model => model.AttendanceReason)</dd>
            }
        </dl>
            
    </div>
</div>
<div class="modal-footer justify-content-between">
    <div>
        <a class="btn btn-primary" asp-controller="VolunteerShift" asp-action="Edit" asp-route-id="@Model?.ShiftID">Edit</a>
    </div>
    @if(!Model.NonAttendance.HasValue){
        <div>
            <a asp-controller="VolunteerShift" asp-action="AttendanceConfirm" asp-route-id="@Model?.ShiftID" class="btn btn-success" title="Click to confirm shift attendance">Confirm</a>
            <a asp-controller="VolunteerShift" asp-action="AttendanceDeny" asp-route-id="@Model?.ShiftID" class="btn btn-danger" title="Click to deny shift attendance">Deny</a>
        </div>
    }
</div>
