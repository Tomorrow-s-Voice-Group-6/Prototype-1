@model TVAttendance.Models.ShiftVolunteer

<div class="modal fade" id="vol-shift-details-modal" tabindex="-1" aria-labelledby="vol-shift-details-modal-label" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="vol-shift-details-modal-label">@Model.Shift.Event.EventName Details</h5>
                <button type="button" class="close" data-dismiss="modal" title="Close Details window" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div>
                    <h4>Shift</h4>
                    <hr />
                    <dl class="row">
                        <div class="col-sm-5">
                            <dt>
                                @Html.DisplayNameFor(model => model.Shift.Event.EventName)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Shift.Event.EventName)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Shift.ShiftRange)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Shift.ShiftRange)
                            </dd>
                        </div>
                        <div class="col-sm-5">
                            @if (Model.ClockIn.HasValue)
                            {
                                <dt>
                                    @Html.DisplayNameFor(model => model.ClockIn)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.ClockIn)
                                </dd>
                            }
                            @if (Model.ClockOut.HasValue)
                            {
                                <dt>
                                    @Html.DisplayNameFor(model => model.ClockOut)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.ClockOut)
                                </dd>
                            }
                            <dt>
                                @Html.DisplayNameFor(model => model.NonAttendance)
                            </dt>
                            @if (Model.NonAttendance == null)
                            {

                                <dd>Attendance unconfirmed</dd>
                            }
                            else if (Model.NonAttendance == true)
                            {
                                <dd>Shift Attended</dd>
                            }
                            else
                            {
                                <dd>Shift Unattended</dd>
                            }
                        </div>
                    </dl>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <div >
                    <a class="btn btn-primary" asp-controller="VolunteerShift" asp-action="Edit" asp-route-id="@Model?.ShiftID">Edit</a>
                </div>
                @if(!Model.NonAttendance.HasValue){
                    <div>
                        <a asp-controller="VolunteerShift" asp-action="AttendanceConfirm" asp-route-id="@Model?.ShiftID" class="btn btn-success" title="Click to confirm shift attendance">Confirm</a>
                        <a asp-controller="VolunteerShift" asp-action="AttendanceDeny" asp-route-id="@Model?.ShiftID" class="btn btn-danger" title="Click to deny shift attendance">Deny</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
