@using TVAttendance.Utilities
@model IEnumerable<TVAttendance.Models.ShiftVolunteer>

@{
    TVAttendance.Models.Volunteer volunteer = (TVAttendance.Models.Volunteer)ViewBag.Volunteer;
    <partial name="_VolunteerDetails" model="volunteer"/>
    ViewData["Title"] = "Index";
}

<h2>Shifts</h2>

<input type="hidden" name ="VolunteerID" value="@volunteer.ID"/>

<form id="shift-vol-form" asp-controller="VolunteerShift" asp-action="Index">
    <input type="hidden" name="VolunteerID" value="@volunteer.ID" />
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <div class="form-horizontal">
        <button class="btn @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle"
                data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            Filter/Search @ViewData["numFilters"]
        </button>

        <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-3">
                        <label title="Filter by characters in a Events name" class="control-label">Search Event Name:</label>
                        @Html.TextBox("SearchEventName", null, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">From Date:</label>
                        @Html.TextBox("FromDate", null, new { @id = "date-older", @type = "date", @class = "form-control" })
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">To Date:</label>
                        @Html.TextBox("ToDate", null, new { @id = "date-newer", @type = "date", @class = "form-control" })
                    </div>
                    <div class="form-group" title="Filter by active or inactive singers.">
                        <label class="control-label">Filter by Active Status:</label>
                        @Html.DropDownList("Attendance", new List<SelectListItem>
                        {
                        new SelectListItem {Value ="null", Text = "Unconfirmed"},
                        new SelectListItem { Value = "true", Text = "Attended" },
                        new SelectListItem { Value = "false", Text = "Unattended" }
                        }, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                    </div>
                    <div class="form-group align-self-end">
                        <input type="submit" name="actionButton" value="Filter"
                               class="btn btn-outline-primary" />
                        <a asp-action="Index" class="btn btn-outline-dark" asp-route-VolunteerID="@volunteer.ID">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <table class="table" title="List of shifts that are taken from an event">
        <thead>
            <tr>
                <th title="Event Name column.">
                    @Html.DisplayNameFor(model => model.Shift.Event.EventName)
                </th>
                <th class="d-none d-sm-table-cell" title="Shift Date column.  The Day the shift occurs">
                    @Html.DisplayNameFor(model => model.Shift.ShiftStartDate)
                </th>
                <th class="d-none d-md-table-cell" title="Shift Range column.  The hours of a given shift from start to end.">
                    @Html.DisplayNameFor(model => model.Shift.ShiftRange)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td title="Event Name column.">
                        @Html.DisplayFor(model => item.Shift.Event.EventName)
                    </td>
                    <td class="d-none d-sm-table-cell" title="Shift Date column.  The Day the shift occurs">
                        @Html.DisplayFor(model => item.Shift.ShiftStartDate)
                    </td>
                    <td class="d-none d-md-table-cell" title="Shift Range column.  The hours of a given shift from start to end.">
                        @Html.DisplayFor(model => item.Shift.ShiftRange)
                    </td>
                    <td>

                        @if (item.ClockIn == null)
                        {
                            <a class="btn btn-outline-primary" asp-action="ClockIn" asp-route-VolunteerID="@volunteer.ID" title="Clock into today's shift." asp-route-id="@item.ShiftID">Clock-In</a>
                        }
                        else if (item.ClockOut == null)
                        {
                            <a class="btn btn-outline-primary" asp-action="ClockOut" asp-route-VolunteerID="@volunteer.ID" title="Clock out of today's shift." asp-route-id="@item.ShiftID">Clock-Out</a>
                        }

                        <button title="Click to view shift details" type="button" class="btn btn-primary open-shift-modal" 
                        data-bs-toggle="modal" 
                        data-bs-target="#vol-shift-details-modal" 
                        data-shift-id="@item.ShiftID">Details</button>

                        @if(!item.NonAttendance.HasValue){
                            <button title="Click to cancel the selected shift and provide a reason" type="button" class="btn btn-danger open-cancel-modal"
                                    data-bs-toggle="modal"
                                    data-bs-target="#vol-shift-cancel-modal"
                                    data-shift-id="@item.ShiftID">
                                Cancel
                            </button>
                        }
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <partial name="_PagingNavBar" />
</form>

<div class="modal fade" id="vol-shift-details-modal" tabindex="-1" aria-labelledby="vol-shift-details-modal-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="details-shift-modal-content">
        </div>
    </div>
</div>

<div class="modal fade" id="vol-shift-cancel-modal" tabindex="-1" aria-labelledby="vol-shift-cancel-modal-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="cancel-modal-content">
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).on('click', '.open-shift-modal', function () {
            var shiftId = $(this).data('shift-id')

            $.ajax({
                url: '@Url.Action("Details", "VolunteerShift")',
                type: 'GET',
                data: {
                    id: shiftId
                },
                success: function (result){
                    $('#details-shift-modal-content').html(result)
                    $('#vol-shift-details-modal').modal('show')
                },
                error: function () {
                    alert("Could not load the details.");
                }
            })
        })

        $(document).on('click', '.open-cancel-modal', function () {
            var shiftId = $(this).data('shift-id')

            $.ajax({
                url: '@Url.Action("Cancel", "VolunteerShift")',
                type: 'GET',
                data: {
                    id: shiftId
                },
                success: function (result){
                    $('#cancel-modal-content').html(result)
                    $('#vol-shift-cancel-modal').modal('show')
                },
                error: function () {
                    alert("Could not load the cancel operation.");
                }
            })
        })
    </script>

    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>

}