@model TVAttendance.Models.ShiftVolunteer

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit @Model.Shift.Event.EventName Shift</h1>

<form asp-controller="VolunteerShift" asp-action="Edit">
    <div asp-validation-summary="All" class="text-danger"></div>
    <input type="hidden" asp-for="ShiftID" />
    <input type="hidden" asp-for="VolunteerID" />

    <div class="row">
        @{
            var eventMin = Model.Shift.Event.EventStart.Date.ToString("yyyy-MM-ddTHH:mm");
            var eventMax = Model.Shift.Event.EventEnd.Date.AddHours(23).AddMinutes(59).ToString("yyyy-MM-ddTHH:mm");
        }

        <div class="col-md-3">
            <div class="form-group" title="The date of the shift.">
                <label asp-for="Shift.ShiftStart" class="control-label required"></label>
                <input asp-for="Shift.ShiftStart" class="form-control" type="datetime-local"
                       value="@Model.Shift.ShiftStart.ToString("yyyy-MM-ddTHH:mm")"
                       min="@eventMin"
                       max="@eventMax" />
                <span asp-validation-for="Shift.ShiftStart" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group" title="The date of the shift.">
                <label asp-for="Shift.ShiftEnd" class="control-label required"></label>
                <input asp-for="Shift.ShiftEnd" class="form-control" type="datetime-local"
                       value="@Model.Shift.ShiftEnd.ToString("yyyy-MM-ddTHH:mm")"
                       min="@eventMin"
                       max="@Model.Shift.Event.EventEnd.Date.AddHours(23).AddMinutes(59).ToString("yyyy-MM-ddTHH:mm")" />
                <span asp-validation-for="Shift.ShiftEnd" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row">
        @if (Model.ClockIn.HasValue)
        {
            <div class="col-md-3">
                <div class="form-group" title="Time the shift ends.">
                    <label asp-for="ClockIn" class="control-label"></label>
                    <input asp-for="ClockIn" class="form-control" type="datetime-local" value="@Model.ClockIn.Value.ToString("yyyy-MM-ddTHH:mm")" />
                    <span asp-validation-for="ClockIn" class="text-danger"></span>
                </div>
            </div>

            @if (Model.ClockOut.HasValue)
            {
                <div class="col-md-3">
                    <div class="form-group" title="Time the shift ends.">
                        <label asp-for="ClockOut" class="control-label"></label>
                        <input asp-for="ClockOut" class="form-control" type="datetime-local" value="@Model.ClockOut.Value.ToString("yyyy-MM-ddTHH:mm")" />
                        <span asp-validation-for="ClockOut" class="text-danger"></span>
                    </div>
                </div>
            }
        }
    </div>

    <div class="row">
        <div class="col-md-3">
            <div class="form-group" title="Input to determine whether the volunteer attended their shift">
                <label asp-for="NonAttendance" class="control-label required"></label>
                @Html.DropDownListFor(model => model.NonAttendance, new List<SelectListItem>
                {
                new SelectListItem {Value ="null", Text = "Select an option"},
                new SelectListItem { Value = "true", Text = "Attended" },
                new SelectListItem { Value = "false", Text = "Absent" }
                }, htmlAttributes: new { @class = "form-control" })

                <span asp-validation-for="NonAttendance" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group" title="Input to determine whether the volunteer attended their shift">
                <label asp-for="AttendanceReason" class="control-label"></label>
                <select asp-for="AttendanceReason" class="list-scroll form-control" asp-items="@Html.GetEnumSelectList<AttendanceReason>()">
                    <option value="">Select a reason</option>
                </select>
                <span asp-validation-for="AttendanceReason" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        <a href="@ViewData["returnURL"]" class="btn btn-outline-primary" title="Return back to Volunteer Details.">Back to Volunteer</a>
    </div>
</form>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
